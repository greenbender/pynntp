[tool.poetry]
name = "pynntp"
version = "2.0.1"
description = "NNTP Library (including compressed headers)"
authors = ["Byron Platt <byron.platt@gmail.com>"]
license = "GPL-3.0-or-later"
readme = "README.md"
packages = [{ include = "nntp" }]
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
    "Operating System :: OS Independent",
    "Topic :: Communications :: Usenet News",
]

[tool.poetry.dependencies]
python = ">=3.9"

[tool.poetry.group.dev.dependencies]
mypy = "^1.11.2"
pre-commit = ">=3.8,<5.0"
pytest = "^8.3.2"
pytest-benchmark = "^4.0.0"
ruff = "^0.6.9"
sphinx-pyproject = "*"

[tool.poetry.group.docs]
optional = true

[tool.poetry.group.docs.dependencies]
myst-parser = "*"
sphinx-autoapi = "*"
sphinx-pyproject = "*"


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
[tool.ruff]
target-version = "py39"

[tool.ruff.lint]
select = [
    "A",     # flake8-builtins
    "AIR",   # Airflow
    "ANN",   # flake8-annotations
    "ARG",   # flake8-unused-arguments
    "ASYNC", # flake8-async
    "B",     # flake8-bugbear
    "BLE",   # flake8-blind-except
    "C4",    # flake8-comprehensions
    "C90",   # McCabe cyclomatic complexity
    "DJ",    # flake8-django
    "DTZ",   # flake8-datetimez
    "E",     # pycodestyle
    "ERA",   # eradicate
    "EXE",   # flake8-executable
    "F",     # Pyflakes
    "FA",    # flake8-future-annotations
    "FIX",   # flake8-fixme
    "FLY",   # flynt
    "FURB",  # refurb
    "G",     # flake8-logging-format
    "I",     # isort
    "ICN",   # flake8-import-conventions
    "INP",   # flake8-no-pep420
    "INT",   # flake8-gettext
    "ISC",   # flake8-implicit-str-concat
    "LOG",   # flake8-logging
    "N",     # pep8-naming
    "NPY",   # NumPy-specific rules
    "PD",    # pandas-vet
    "PERF",  # Perflint
    "PGH",   # pygrep-hooks
    "PIE",   # flake8-pie
    "PL",    # Pylint
    "PT",    # flake8-pytest-style
    "PTH",   # flake8-use-pathlib
    "PYI",   # flake8-pyi
    "Q",     # flake8-quotes
    "RET",   # flake8-return
    "RSE",   # flake8-raise
    "RUF",   # Ruff-specific rules
    "S",     # flake8-bandit
    "SIM",   # flake8-simplify
    "SLF",   # flake8-self
    "SLOT",  # flake8-slots
    "T10",   # flake8-debugger
    "TCH",   # flake8-type-checking
    "TID",   # flake8-tidy-imports
    "UP",    # pyupgrade
    "W",     # pycodestyle
    "YTT",   # flake8-2020
    # "COM",  # flake8-commas
    # "CPY",  # flake8-copyright
    # "D",    # pydocstyle
    # "DOC",  # pydoclint
    # "EM",   # flake8-errmsg
    # "FAST", # FastAPI
    # "FBT",  # flake8-boolean-trap
    # "T20",  # flake8-print
    # "TD",   # flake8-todos
    # "TRY",  # tryceratops
]
ignore = [
    "ANN101",  # missing type annotation for `self`
    "B904",    # raise-without-from-inside-except
    "FIX002",  # line-contains-todo
    "ISC001",  # may conflict with ruff format
    "PLW2901", # `for` loop variable overwritten
]

[tool.ruff.lint.mccabe]
max-complexity = 12

[tool.ruff.lint.pylint]
allow-magic-value-types = ["bytes", "int", "str"]
max-args = 8                                      # Default: 5

[tool.ruff.lint.per-file-ignores]
"nntp/nntp.py" = ["A002", "ARG002"]
"nntp/utils.py" = ["N806"]
"tests/*" = ["S101"]

[tool.sphinx-pyproject]
github_username = "greenbender"
github_repository = "pynntp"
copyright = "2024, Byron Platt"

autoapi_dirs = ["nntp"]
exclude_patterns = [
    ".*/*",
    ".DS_Store",
    "docs/_build",
    "LICENSE.rst",
    "Thumbs.db",
]
extensions = ["autoapi.extension", "myst_parser"]

html_static_path = ["_static"]
html_theme = "alabaster"

myst_enable_extensions = [
    "amsmath",
    "attrs_inline",
    "colon_fence",
    "deflist",
    "dollarmath",
    "fieldlist",
    "html_admonition",
    "html_image",
    # "linkify",
    "replacements",
    "smartquotes",
    "strikethrough",
    "substitution",
    "tasklist",
]
myst_fence_as_directive = ["include"]
suppress_warnings = ["epub.unknown_project_files"]
templates_path = ["_templates"]

[tool.sphinx-pyproject.source_suffix]
".md" = "markdown"
".rst" = "restructuredtext"
".txt" = "markdown"
